JTelnetServer
_____________

Portable Telnet server. It implements a subset of functionalities normally
available on OS shells. For example, the command already implemented are:
- ls
- mkdir
- cd
- rm
- more
- touch
- status
- history
- help
- quit
- pwd


How to deploy/start the server
____________________________

From the project directory, simply peform the following entry:

 > mvn exec:java

The server will be binded on localhost:20000 if no issues are encountered in
opening the server configuration file; otherwise, a default binding on 
localhost:10000 will be deployed.


Test using Telnet
_________________

Run the sever as above explained. On the command prompt, digit

 > telnet localhost 20000[10000]

the port is alterative and it depends from the bind (read above).


How to rebuild from scratch
___________________________

Implement the following steps:
1. clean the current build

 > mvn clean

2. compile the project

 > mvn compile

3. test the release

 > mvn test

4. install the jar in the repo

 > mvn install

Of course, the above steps can be collapsed in only one.


Alternative way to deploy/start the server
__________________________________________

Once the above rebuilding has been accomplished, it is possible to perform the
following entry on the command prompt:
 
 > java -jar target/jtelnetserver-1.0.jar target/classes server.properties

this will start the connector thread as done by maven exec. Alternatively,

 > java -jar target/jtelnetserver-1.0.jar

the server will be started using the default configuration. 


